<!--
 * ***********************************************************************************************
 *
 * Phoebius Framework
 *
 * **********************************************************************************************
 *
 * Copyright (c) 2009 phoebius.org
 *
 * This program is free software; you can redistribute it and/or modify it under the terms
 * of the GNU Lesser General Public License as published by the Free Software Foundation;
 * either version 3 of the License, or (at your option) any later version.
 *
 * You should have received a copy of the GNU Lesser General Public License along with
 * this program; if not, see <http://www.gnu.org/licenses/>.
 *
 *************************************************************************************************
-->

<!ELEMENT domain (entities*)>
<!ATTLIST domain
	db-schema		CDATA #IMPLIED
>

<!ELEMENT entities (entity*)>

<!ELEMENT entity (properties*)>
<!ATTLIST entity
	name			ID #REQUIRED
	has-dao			(true|false) "true"
	db-schema		CDATA #IMPLIED
	db-table		CDATA #IMPLIED
>

<!ELEMENT properties (identifier?, property*, container*)>

<!-- If entity is identifierless then entity.has-dao should be specified explicitly -->
<!ELEMENT identifier EMPTY>
<!ATTLIST identifier
	name			CDATA "id"
	type			CDATA "int32 isNullable=false isGenerated=true"
	db-columns		CDATA #IMPLIED
>

<!-- 
= "Type" attribute syntax =
== a reference to DBType ==
 type="DBType::TYPENAME param1='value' param2='value'"
 e.g.
 type="DBType::STRING size='255' isNullable=true"
 or a raw value of DBType constant:
 type="varchar size='255' isNullable=true"
 
== a reference to ISqlType/IOrmPropertyType class ==
 type="ClassName ctor-arg1='value' ctor-arg2='value'"
 e.g.
 type="DBType id='string' size='255' isNullable=true"
 or
 type="RawSqlType definition='int8[][] NOT NULL'"
 or
 type="ArrayPropertyType baseType='int8'"
 
== a reference to IOrmPropertyAssignable implemetor ==
 type="Integer"
 
== a reference to the type defined within project domain (nested refs are allowed)
 type="Class"
-->
<!ELEMENT property EMPTY>
<!ATTLIST property
	name			CDATA #REQUIRED
	type			CDATA #REQUIRED
	visibility		(full|readonly|transparent) "full"
	unique			(true|false) "false"
	multiplicity	(zeroOrOne|exactlyOne) "exactlyOne"
	db-columns		CDATA #IMPLIED
>

<!-- 
Container works like a typical property except that:
 - it does not store a value, it only refers to a bunch of entities
 - its visibility is readonly
 - it is always not unique
 - relation (1:*, *:*) is determined by a referencing property type, e.g.: type=Entity refs=EntityProperty
 --> 
<!ELEMENT container EMPTY>
<!ATTLIST container
	name			CDATA #REQUIRED
	type			CDATA #REQUIRED
	refs			CDATA "id"
>

