<!--
 * ***********************************************************************************************
 *
 * Phoebius Framework
 *
 * **********************************************************************************************
 *
 * Copyright (c) 2009 phoebius.org
 *
 * This program is free software; you can redistribute it and/or modify it under the terms
 * of the GNU Lesser General Public License as published by the Free Software Foundation;
 * either version 3 of the License, or (at your option) any later version.
 *
 * You should have received a copy of the GNU Lesser General Public License along with
 * this program; if not, see <http://www.gnu.org/licenses/>.
 *
 *************************************************************************************************
-->

<!-- 
Future releases:
================
 + Property type settings
 	<property name="counter" type="Integer">
	 	<typeSettings>
	 		<typeSetting name="size">11</typeSetting>
	 	</typeSettings>
	 </property>
 	<property name="money" type="Float">
	 	<typeSettings>
	 		<typeSetting name="precition">10</typeSetting>
	 		<typeSetting name="scale">5</typeSetting>
	 	</typeSettings>
	 </property>
-->

<!ELEMENT domain (entities*)>
<!ATTLIST domain
	db-schema		CDATA #IMPLIED
>

<!ELEMENT entities (entity*)>

<!ELEMENT entity (properties*)>
<!ATTLIST entity
	name			ID #REQUIRED
	has-dao			(true|false) "true"
	db-schema		CDATA #IMPLIED
	db-table		CDATA #IMPLIED
>

<!ELEMENT properties (identifier?, property*, container*)>

<!-- If entity is identifierless then entity.has-dao should be specified explicitly -->
<!ELEMENT identifier EMPTY>
<!ATTLIST identifier
	name			CDATA "id"
	type			CDATA "AutoIntPropertyType"
	db-columns		CDATA #IMPLIED
>

<!ELEMENT property EMPTY>
<!ATTLIST property
	name			CDATA #REQUIRED
	type			CDATA #REQUIRED
	visibility		(full|readonly|transparent) "full"
	unique			(true|false) "false"
	multiplicity	(zeroOrOne|exactlyOne) "exactlyOne"
	db-columns		CDATA #IMPLIED
>

<!-- 
Container works like a typical property except that:
 - it does not store a value, it only refers to a bunch of entities
 - its visibility is readonly
 - it is always not unique
 - relation (1:*, *:*) is determined by a referencing property type, e.g.: type=Entity refs=EntityProperty
 --> 
<!ELEMENT container EMPTY>
<!ATTLIST container
	name			CDATA #REQUIRED
	type			CDATA #REQUIRED
	refs			CDATA "id"
	db-columns		CDATA #IMPLIED
>

